[{"defaultVersionName":"3.9.1","url":"https:\/\/www.python.org\/about\/","description":"Python is powerful... and fast; plays well with others; runs everywhere; is friendly & easy to learn; is Open.Example: python3 --help","package":"python3","versions":[{"full":"python3\/3.9.1","help":"python3: programming language\n","markedDefault":false,"canonicalVersionString":"000000003.000000009.000000001.*zfinal","description":"Python is powerful... and fast; plays well with others; runs everywhere; is friendly & easy to learn; is Open.Example: python3 --help","path":"\/software\/c4\/wittelab\/modulefiles\/python3\/3.9.1.lua","wV":"000000003.000000009.000000001.*zfinal","versionName":"3.9.1"}]},{"description":"Additional information can be found in the tutorial: https:\/\/cnsgenomics.com\/software\/gcta\/#Tutorial","defaultVersionName":"1.93.2","package":"gcta","versions":[{"full":"gcta\/1.93.2","help":"gcta: GCTA (Genome-wide Complex Trait Analysis) was initially designed to estimate the proportion of phenotypic variance explained by all genome-wide SNPs for complex traits (i.e., the GREML method). It has been subsequently extended for many other analyses to better understand the genetic architecture of complex traits. GCTA currently supports the following analyses.\n","markedDefault":false,"canonicalVersionString":"000000001.000000093.000000002.*zfinal","description":"Additional information can be found in the tutorial: https:\/\/cnsgenomics.com\/software\/gcta\/#Tutorial","path":"\/software\/c4\/wittelab\/modulefiles\/gcta\/1.93.2.lua","wV":"000000001.000000093.000000002.*zfinal","versionName":"1.93.2"}]},{"defaultVersionName":"1.0.0","url":"https:\/\/biobank.ndph.ox.ac.uk\/ukb\/refer.cgi?id=668","description":"gfetch client has been developed to allow Approved researchers to download elements of it piecemeal to their local systems from secure online repositories outside the main UK Biobank showcase system","package":"gfetch","versions":[{"full":"gfetch\/1.0.0","help":"gfetch: Download multi-person genetic data for the UK Biobank\n","markedDefault":false,"canonicalVersionString":"000000001.*zfinal","description":"gfetch client has been developed to allow Approved researchers to download elements of it piecemeal to their local systems from secure online repositories outside the main UK Biobank showcase system","path":"\/software\/c4\/wittelab\/modulefiles\/gfetch\/1.0.0.lua","wV":"000000001.*zfinal","versionName":"1.0.0"}]},{"defaultVersionName":"3.9.6","url":"https:\/\/developer.asperasoft.com\/desktop-advance\/command-line-client","description":"The IBM Aspera Command-Line Interface (CLI) is a lightweight shell scripting tool that be used to automate Faspex and Shares tasks without having to do additional coding. The CLI is for users and organizations that want to automate their transfer workflows; it provides an alternative to using the API for the same functionality. Example: `ascp --help`.","package":"ascp","versions":[{"full":"ascp\/3.9.6","help":"ascp: Command line data transfer client\n","markedDefault":false,"canonicalVersionString":"000000003.000000009.000000006.*zfinal","description":"The IBM Aspera Command-Line Interface (CLI) is a lightweight shell scripting tool that be used to automate Faspex and Shares tasks without having to do additional coding. The CLI is for users and organizations that want to automate their transfer workflows; it provides an alternative to using the API for the same functionality. Example: `ascp --help`.","path":"\/software\/c4\/wittelab\/modulefiles\/ascp\/3.9.6.lua","wV":"000000003.000000009.000000006.*zfinal","versionName":"3.9.6"}]},{"defaultVersionName":"3.0","url":"https:\/\/github.com\/gkichaev\/PAINTOR_V3.0","description":"PAINTOR is a statistical fine-mapping method that integrates functional genomic data with association strength from potentially multiple populations (or traits) to prioritize variants for follow-up analysis. The software runs on multiple fine-mapping loci and\/or populations\/traits simultaneously and takes as input the following data for each set of SNPs at a locus. Examples can be found at https:\/\/github.com\/gkichaev\/PAINTOR_V3.0","package":"paintor","versions":[{"full":"paintor\/3.0","help":"liftOver: program can be used to fine map putative causal variants using GWAS summary statistics.\n","markedDefault":false,"canonicalVersionString":"000000003.*zfinal","description":"PAINTOR is a statistical fine-mapping method that integrates functional genomic data with association strength from potentially multiple populations (or traits) to prioritize variants for follow-up analysis. The software runs on multiple fine-mapping loci and\/or populations\/traits simultaneously and takes as input the following data for each set of SNPs at a locus. Examples can be found at https:\/\/github.com\/gkichaev\/PAINTOR_V3.0","path":"\/software\/c4\/wittelab\/modulefiles\/paintor\/3.0.lua","wV":"000000003.*zfinal","versionName":"3.0"}]},{"defaultVersionName":"1.0.0","url":"https:\/\/genome-store.ucsc.edu\/products\/","description":"This is a command-line tool, and supports forward\/reverse conversions, batch conversions, and conversions between species. The LiftOver program requires a UCSC-generated over.chain file as input. Pre-generated files are available for selected assemblies here: http:\/\/hgdownload.cse.ucsc.edu\/downloads.html.  Example: `liftOver`.","package":"liftOver","versions":[{"full":"liftOver\/1.0.0","help":"liftOver: program can be used to convert coordinate ranges between genome assemblies\n","markedDefault":false,"canonicalVersionString":"000000001.*zfinal","description":"This is a command-line tool, and supports forward\/reverse conversions, batch conversions, and conversions between species. The LiftOver program requires a UCSC-generated over.chain file as input. Pre-generated files are available for selected assemblies here: http:\/\/hgdownload.cse.ucsc.edu\/downloads.html.  Example: `liftOver`.","path":"\/software\/c4\/wittelab\/modulefiles\/liftOver\/1.0.0.lua","wV":"000000001.*zfinal","versionName":"1.0.0"}]},{"defaultVersionName":"5.1","url":"https:\/\/dougspeed.com\/ldak\/","description":"This is a command-line tool for analyses of individual-level and summary data (formatted accordingly: https:\/\/dougspeed.com\/summary-statistics\/). Analyses of summary data require pre-computed tagging files (LD reference panels). You can generate these from individual-level data (https:\/\/dougspeed.com\/calculate-taggings\/) or use pre-computed files from external reference datasets (https:\/\/dougspeed.com\/pre-computed-tagging-files\/). Recommended tagging files for EUR\/GBB and AFR populations have been downloaded.","package":"ldak","versions":[{"full":"ldak\/5.1","help":"LDAK: program for running heritability, genetic correlation, and genetic prediction (BayesR, MultiBLUP) analyses\n","markedDefault":false,"canonicalVersionString":"000000005.000000001.*zfinal","description":"This is a command-line tool for analyses of individual-level and summary data (formatted accordingly: https:\/\/dougspeed.com\/summary-statistics\/). Analyses of summary data require pre-computed tagging files (LD reference panels). You can generate these from individual-level data (https:\/\/dougspeed.com\/calculate-taggings\/) or use pre-computed files from external reference datasets (https:\/\/dougspeed.com\/pre-computed-tagging-files\/). Recommended tagging files for EUR\/GBB and AFR populations have been downloaded.","path":"\/software\/c4\/wittelab\/modulefiles\/ldak\/5.1.lua","wV":"000000005.000000001.*zfinal","versionName":"5.1"}]},{"defaultVersionName":"2.0.0","url":"https:\/\/github.com\/gabraham\/flashpca","description":"FlashPCA performs fast principal component analysis (PCA) of single nucleotide polymorphism (SNP) data, similar to smartpca from EIGENSOFT (http:\/\/www.hsph.harvard.edu\/alkes-price\/software\/) and shellfish (https:\/\/github.com\/dandavison\/shellfish). FlashPCA is based on the https:\/\/github.com\/yixuan\/spectra\/ library.","package":"flashpca","versions":[{"full":"flashpca\/2.0.0","help":"FlashPCA2: performs fast PCA of SNP data\n","markedDefault":false,"canonicalVersionString":"000000002.*zfinal","description":"FlashPCA performs fast principal component analysis (PCA) of single nucleotide polymorphism (SNP) data, similar to smartpca from EIGENSOFT (http:\/\/www.hsph.harvard.edu\/alkes-price\/software\/) and shellfish (https:\/\/github.com\/dandavison\/shellfish). FlashPCA is based on the https:\/\/github.com\/yixuan\/spectra\/ library.","path":"\/software\/c4\/wittelab\/modulefiles\/flashpca\/2.0.0.lua","wV":"000000002.*zfinal","versionName":"2.0.0"}]},{"defaultVersionName":"0.6.5","url":"https:\/\/github.com\/hakyimlab\/MetaXcan\/tree\/master\/software","description":"Here you can find the latest implementation of PrediXcan: PrediXcan.py. This uses individual-level genotype and phenotype, along a mechanism's prediction model (e.g. models predicting expression or splicing quantification), to compute associations between omic features and a complex trait. Example: source $ENV; python ${METAXCAN_DIR}\/SPrediXcan.py --help; deactivate","package":"metaxcan","versions":[{"full":"metaxcan\/0.6.5","help":"metaxcan: a set of tools to perform twas \n","markedDefault":false,"canonicalVersionString":"000000000.000000006.000000005.*zfinal","description":"Here you can find the latest implementation of PrediXcan: PrediXcan.py. This uses individual-level genotype and phenotype, along a mechanism's prediction model (e.g. models predicting expression or splicing quantification), to compute associations between omic features and a complex trait. Example: source $ENV; python ${METAXCAN_DIR}\/SPrediXcan.py --help; deactivate","path":"\/software\/c4\/wittelab\/modulefiles\/metaxcan\/0.6.5.lua","wV":"000000000.000000006.000000005.*zfinal","versionName":"0.6.5"}]},{"defaultVersionName":"2.2.2","url":"https:\/\/genomics.ut.ee\/en\/tools\/gwama","description":"software has been developed to perform meta-analysis of the results of GWA studies of binary or quantitative phenotypes. The software incorporates error trapping facilities to identify strand alignment errors and allele flipping, and performs tests of heterogeneity of effects between studies. Example: `GWAMA --help`.","package":"gwama","versions":[{"full":"gwama\/2.2.2","help":"GWAMA: Genome-Wide Association Meta Analysis\n","markedDefault":false,"canonicalVersionString":"000000002.000000002.000000002.*zfinal","description":"software has been developed to perform meta-analysis of the results of GWA studies of binary or quantitative phenotypes. The software incorporates error trapping facilities to identify strand alignment errors and allele flipping, and performs tests of heterogeneity of effects between studies. Example: `GWAMA --help`.","path":"\/software\/c4\/wittelab\/modulefiles\/gwama\/2.2.2.lua","wV":"000000002.000000002.000000002.*zfinal","versionName":"2.2.2"}]},{"defaultVersionName":"1.11","url":"http:\/\/www.htslib.org\/download\/","description":"BCFtools is a set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed. Example: `bcftools --help`.","package":"bcftools","versions":[{"full":"bcftools\/1.11","help":"bcftools: Command line suite for working with bgzipped vcf files, includes tabix and bgzip\n","markedDefault":false,"canonicalVersionString":"000000001.000000011.*zfinal","description":"BCFtools is a set of utilities that manipulate variant calls in the Variant Call Format (VCF) and its binary counterpart BCF. All commands work transparently with both VCFs and BCFs, both uncompressed and BGZF-compressed. Example: `bcftools --help`.","path":"\/software\/c4\/wittelab\/modulefiles\/bcftools\/1.11.lua","wV":"000000001.000000011.*zfinal","versionName":"1.11"}]},{"defaultVersionName":"2.2.4","url":"https:\/\/github.com\/rgcgithub\/regenie","description":"performs fast gene-based and single-variants tests specifically designed for case-control imbalance  Example: `regenie --help`.","package":"regenie","versions":[{"full":"regenie\/2.2.4","help":"regenie: a C++ program for whole genome regression modelling of large genome-wide association studies developed and supported by a team of scientists at the Regeneron Genetics Center.\n","markedDefault":false,"canonicalVersionString":"000000002.000000002.000000004.*zfinal","description":"performs fast gene-based and single-variants tests specifically designed for case-control imbalance  Example: `regenie --help`.","path":"\/software\/c4\/wittelab\/modulefiles\/regenie\/2.2.4.lua","wV":"000000002.000000002.000000004.*zfinal","versionName":"2.2.4"}]},{"defaultVersionName":"0.0.0","url":"https:\/\/github.com\/hakyimlab\/summary-gwas-imputation","description":"Here you can find many python files for GWAS harmination and summary stat imputation. See github page for more details. Example: source $ENV; ls $GWAS_TOOLS\/; python $GWAS_TOOLS\/gwas_parsing.py --help; deactivate","package":"gwastools","versions":[{"full":"gwastools\/0.0.0","help":"gwastools: This repository contains tools to harmonize GWAS summary statistics to a given reference. The main application is harmonization of a public gwas' variants to those in the GTEx study, and allow imputation of summary statistics for missing variants. \n","markedDefault":false,"canonicalVersionString":"*zfinal","description":"Here you can find many python files for GWAS harmination and summary stat imputation. See github page for more details. Example: source $ENV; ls $GWAS_TOOLS\/; python $GWAS_TOOLS\/gwas_parsing.py --help; deactivate","path":"\/software\/c4\/wittelab\/modulefiles\/gwastools\/0.0.0.lua","wV":"*zfinal","versionName":"0.0.0"}]},{"defaultVersionName":"0.7.0","url":"https:\/\/github.com\/bogdanlab\/focus","description":"FOCUS (Fine-mapping Of CaUsal gene Sets) is software to fine-map transcriptome-wide association study statistics at genomic risk regions. The software takes as input summary GWAS data along with eQTL weights and outputs a credible set of genes to explain observed genomic risk. Example: source $ENV; focus --help; deactivate","package":"focus","versions":[{"full":"focus\/0.7.0","help":"focus: a set of tools to finemap twas statistics \n","markedDefault":false,"canonicalVersionString":"000000000.000000007.*zfinal","description":"FOCUS (Fine-mapping Of CaUsal gene Sets) is software to fine-map transcriptome-wide association study statistics at genomic risk regions. The software takes as input summary GWAS data along with eQTL weights and outputs a credible set of genes to explain observed genomic risk. Example: source $ENV; focus --help; deactivate","path":"\/software\/c4\/wittelab\/modulefiles\/focus\/0.7.0.lua","wV":"000000000.000000007.*zfinal","versionName":"0.7.0"}]},{"defaultVersionName":"0.5.4","versions":[{"full":"hess\/0.5.4","help":"HESS: is a Python package that provides utilities for estimating and analyzing local SNP-heritability and genetic covariance from GWAS summary association data. \n","markedDefault":false,"canonicalVersionString":"000000000.000000005.000000004.*zfinal","path":"\/software\/c4\/wittelab\/modulefiles\/hess\/0.5.4.lua","wV":"000000000.000000005.000000004.*zfinal","versionName":"0.5.4"}],"package":"hess","url":"https:\/\/github.com\/huwenboshi\/hess"},{"defaultVersionName":"WitteLab","url":"http:\/\/wittelab.ucsf.edu\/","description":"Repository of modules shared by Witte Lab (http:\/\/wittelab.ucsf.edu\/). When loading this module, you will get access to a large number of software modules.  When unloading the module, any software modules from this .repos repository still loaded when you unload this repository module, will remain in your list of loaded modules but will be inactivate (i.e. behave as they never were loaded) until you reload this repository module again.  Example: `module load .repos` and then `module avail`.","package":".repos","versions":{}},{"defaultVersionName":"1.0.1","url":"https:\/\/github.com\/bulik\/ldsc","description":"Additional information can be found at the wiki: https:\/\/github.com\/bulik\/ldsc\/wiki","package":"ldsc","versions":[{"full":"ldsc\/1.0.1","help":"ldsc: a command line tool for estimating heritability and genetic correlation from GWAS summary statistics. ldsc also computes LD Scores.\n","markedDefault":false,"canonicalVersionString":"000000001.000000000.000000001.*zfinal","description":"Additional information can be found at the wiki: https:\/\/github.com\/bulik\/ldsc\/wiki","path":"\/software\/c4\/wittelab\/modulefiles\/ldsc\/1.0.1.lua","wV":"000000001.000000000.000000001.*zfinal","versionName":"1.0.1"}]},{"defaultVersionName":"0.5.4","url":"https:\/\/github.com\/ding-lab\/CharGer\/tree\/7d7d2911b89261fa5dceea6395a5d188a82757f2","description":"CharGer gathers evidence from databases and annotations, provided by local tools and files or via ReST APIs, and classifies variants according to ACMG guidelines for assessing variant pathogenicity. User-designed pathogenicity criteria can be incorporated into CharGer’s flexible framework, thereby allowing users to create a customized classification protocol. If you use CharGer, please cite our publication so we can continue to support CharGer development: Adam D Scott, Kuan-Lin Huang, Amila Weerasinghe, R Jay Mashl, Qingsong Gao, Fernanda Martins Rodrigues, Matthew A Wyczalkowski, Li Ding, CharGer: clinical Characterization of Germline variants, Bioinformatics, Volume 35, Issue 5, 01 March 2019, Pages 865–867, https:\/\/doi.org\/10.1093\/bioinformatics\/bty649","package":"charger","versions":[{"full":"charger\/0.5.4","help":"charger: a software tool for interpreting and predicting clinical pathogenicity of germline variants. \n","markedDefault":false,"canonicalVersionString":"000000000.000000005.000000004.*zfinal","description":"CharGer gathers evidence from databases and annotations, provided by local tools and files or via ReST APIs, and classifies variants according to ACMG guidelines for assessing variant pathogenicity. User-designed pathogenicity criteria can be incorporated into CharGer’s flexible framework, thereby allowing users to create a customized classification protocol. If you use CharGer, please cite our publication so we can continue to support CharGer development: Adam D Scott, Kuan-Lin Huang, Amila Weerasinghe, R Jay Mashl, Qingsong Gao, Fernanda Martins Rodrigues, Matthew A Wyczalkowski, Li Ding, CharGer: clinical Characterization of Germline variants, Bioinformatics, Volume 35, Issue 5, 01 March 2019, Pages 865–867, https:\/\/doi.org\/10.1093\/bioinformatics\/bty649","path":"\/software\/c4\/wittelab\/modulefiles\/charger\/0.5.4.lua","wV":"000000000.000000005.000000004.*zfinal","versionName":"0.5.4"}]}]
